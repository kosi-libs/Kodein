[versions]
# Core
kaverit = "2.11.0"
atomicfu = "0.29.0"
# Android
android-appcompat = "28.0.0"
androidx-appcompat = "1.7.1"
androidx-fragment = "1.8.8"
androidx-lifecycle = "2.9.2"
androidx-compose = "2.9.3"
compose-bom = "2025.07.00"
# Compose Multiplatform
compose-multiplatform = "1.8.2"
cmp-lifecycle = "2.9.1"
cmp-navigation = "2.9.0-beta04"
# KSP
kotlinpoet = "1.18.1"
ksp = "1.9.20-1.0.14"
# Ktor
ktor = "3.2.3"
# JxInject
javax-inject = "1"
# TornadoFX
openjfx = "0.0.7"
javafx = "12.0.1"
tornadofx = "1.7.20"
testfx = "4.0.18"
# Test
junit = "4.13.2"
junit-jupiter = "5.13.4"
ui-test-junit4-android = "1.8.3"
ui-test-manifest = "1.8.3"
robolectric = "4.15.1"

[libraries]
# Core
kosi-kaverit = { module = "org.kodein.type:kaverit", version.ref = "kaverit" }
# Android
android-appcompat = { module = "com.android.support:appcompat-v7", version.ref = "android-appcompat" }
android-x-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
android-x-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment" }
android-x-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
android-x-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle" }
android-x-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
android-x-compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-compose" }
android-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
android-compose-runtime = { module = "androidx.compose.runtime:runtime" }
# Compose Multiplatform
jetbrains-lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "cmp-lifecycle" }
jetbrains-compose-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "cmp-navigation" }
# KSP
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }
ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
# Ktor
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-sessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor" }
ktor-test-server = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-test-server-default-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor" }
# JxInject
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javax-inject" }
# TornadoFX
tornadofx = { module = "no.tornado:tornadofx", version.ref = "tornadofx" }
testfx = { module = "org.testfx:testfx-core", version.ref = "testfx" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
# Test
junit = { module = "junit:junit", version.ref = "junit" }
ui-test-junit4-android = { module = "androidx.compose.ui:ui-test-junit4-android", version.ref = "ui-test-junit4-android" }
ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "ui-test-manifest" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }

[plugins]
kotlinx-atomicfu = { id = "org.jetbrains.kotlinx.atomicfu", version.ref = "atomicfu" }
compose = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
openjfx = { id = "org.openjfx.javafxplugin", version.ref = "openjfx" }
