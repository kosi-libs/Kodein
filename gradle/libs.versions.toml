[versions]
# Core
kaverit-version = "2.2.1"
kotlin-version = "1.7.20"
# Android
android-appcompat-version = "28.0.0"
androidx-appcompat-version = "1.5.1"
androidx-fragment-version = "1.5.4"
androidx-lifecycle-version = "2.5.1"
# Compose
compose-version = "1.2.1"
# KSP
kotlinpoet-version = "1.12.0"
ksp-version = "1.7.20-1.0.8"
# Ktor
ktor-version = "2.1.3"
# JxInject
javax-inject-version = "1"
# TornadoFX
openjfx-version = "0.0.7"
javafx-version = "12.0.1"
tornadofx-version = "1.7.20"
testfx-version = "4.0.4-alpha"
# Test
junit-version = "4.13.2"
junit-jupiter-version = "5.6.0"

[libraries]
# Core
kosi-kaverit = { module = "org.kodein.type:kaverit", version.ref = "kaverit-version" }
# Android
android-appcompat = { module = "com.android.support:appcompat-v7", version.ref = "android-appcompat-version" }
android-x-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat-version" }
android-x-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment-version" }
android-x-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle-version" }
android-x-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle-version" }
android-x-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle-version" }
# KSP
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet-version" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet-version" }
ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp-version" }
# Ktor
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor-version" }
ktor-server-sessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor-version" }
ktor-test-server = { module = "io.ktor:ktor-server-tests", version.ref = "ktor-version" }
ktor-test-server-default-headers = { module = "io.ktor:ktor-server-default-headers", version.ref = "ktor-version" }
# JxInject
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javax-inject-version" }
# TornadoFX
tornadofx = { module = "no.tornado:tornadofx", version.ref = "tornadofx-version" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin-version" }
testfx = { module = "org.testfx:testfx-core", version.ref = "testfx-version" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter-version" }
# Test
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin-version" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin-version" }
junit = { module = "junit:junit", version.ref = "junit-version" }

[plugins]
compose = { id = "org.jetbrains.compose", version.ref = "compose-version" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp-version" }
openjfx = { id = "org.openjfx.javafxplugin", version.ref = "openjfx-version" }
